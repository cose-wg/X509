<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-cose-x509-02" category="info" submissionType="IETF" version="3">
  <!-- xml2rfc v2v3 conversion 2.24.0 -->
  <front>
    <title abbrev="COSE X.509">CBOR Object Signing and Encryption (COSE): Headers for carrying and referencing X.509 certificates</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-cose-x509-02"/>
    <author initials="J." surname="Schaad" fullname="Jim Schaad">
      <organization>August Cellars</organization>
      <address>
        <email>ietf@augustcellars.com</email>
      </address>
    </author>
    <date/>
    <area>Security</area>
    <abstract>
      <t>
        The CBOR Signing And Encrypted Message (COSE) structure uses references to keys in general.
        For some algorithms, additional properties are defined which carry parts of keys as needed.
        The COSE Key structure is used for transporting keys outside of COSE messages.
        This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.
      </t>
    </abstract>
    <note>
      <name>Contributing to this document</name>
      <!-- RFC EDITOR - Please remove this note before publishing -->
      <t>
        The source for this draft is being maintained in GitHub.
        Suggested changes should be submitted as pull requests  at <eref target="https://github.com/cose-wg/X509"/>.
        Instructions are on that page as well.
        Editorial changes can be managed in GitHub, but any substantial issues need to be discussed on the COSE mailing list.
      </t>
    </note>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>
        In the process of writing <xref target="RFC8152"/> discussions where held on the question of X.509 certificates  <xref target="RFC5280"/>  and if there was a needed to provide for them.
        At the time there were no use cases presented that appeared to have a sufficient need for these attributes.
        Since that time a number of cases where X.509 certificate support is necessary have been defined.
        This document provides a set of attributes that will allow applications to transport and refer to X.509 certificates in a consistent manner.
      </t>
      <t>
	Some of the constrained device situations are being used where an X.509 PKI is already installed.
	One of these situations is the 6tish environment for enrollment of devices where the certificates are installed at the factory.
	The <xref target="I-D.selander-ace-cose-ecdhe"/> draft was also written with the idea that long term certificates could be used to provide for authentication of devices and uses them to establish session keys.
	A final scenario is the use of COSE as a messaging application where long term existence of keys can be used along with a central authentication authority.
	The use of certificates in this scenario allows for key management to be used which is well understood.
      </t>
      <t>
        Example COSE messages for the various headers defined below can be found at https://github.com/cose-wg/Examples.
        THIS IS NOT YET DONE BUT SHOULD BE COMING NOT LONG AFTER THE F2F MEETING.
      </t>
      <section anchor="requirements-terminology">
        <name>Requirements Terminology</name>
        <!--  NOTE FOR AUTHORS:
             We use the following terms in the document
             
             field - an entry in a CBOR array
             parameter - an element in a CBOR map (as oppose to 'member' which is frequently used in JSON
             label - the key of an element in a CBOR map.   Unless otherwise separated from text, enclose with single quote marks
             value - the value of an element in a CBOR map
        -->
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
      <section>
        <name>Open Questions</name>
        <ul empty="true" spacing="normal">
          <li>
            Should we define an extended key usage?
          </li>
          <li>
            Revocation info?
          </li>
        </ul>
      </section>
    </section>
    <section>
      <name>X.509 COSE Headers</name>
      <t>
        The use of X.509 certificates allows for an existing trust infrastructure to be used with COSE.
	This includes the full suite of enrollment protocols, trust anchors, trust chaining and revocation checking that have been defined over time by the IETF and other organizations.
	The key structures that have been defined in COSE currently do not support all of these properties although some may be found in COSE Web Tokens (CWT) <xref target="RFC8392"/>.
      </t>
      <t>
	It is not necessarily expected that constrained devices will fully support the evaluation and processing of X.509 certificates, it is perfectly reasonable for a certificate to be assigned to a device which it can then provide to a relying party along with a signature or encrypted message, the relying party not being a constrained device.
      </t>
      <t>
        Certificates obtained from any of these methods MUST still be validated.
        This validation can be done via the PKIX rules in <xref target="RFC5280"/> or by using a different trust structure, such as a trusted certificate distributer for self-signed certificates.
        The PKIX validation includes matching against the trust anchors configured for the application.
        These rules apply to certificates of a chain length of one as well as longer chains.
        If the application cannot establish a trust in the certificate, then it cannot be used.
      </t>
      <t>
        The header attributes defined in this document are:

      </t>
      <dl newline="false" spacing="normal">
        <dt>x5bag:</dt>
        <dd>
          <t>
	    This header attributes contains a bag of X.509 certificates.
	    The set of certificates in this header are unordered and may contain self-signed certificates.
            The certificate bag can contain certificates which are completely extraneous to the message.
	    (An example of this would be to carry a certificate with a key agreement key usage in a signed message.)
	    As the certificates are unordered, the party evaluating the signature will need to do the necessary path building.
	    Certificates needed for any particular chain to be built may be absent from the bag.
          </t>
          <t>
	    As this header element does not provide any trust, the header attribute can be in either a protected or unprotected header attribute.
          </t>
          <t>
            This header attribute allows for a single or a bag of X.509 certificates to be carried in the message.
          </t>
          <ul spacing="normal">
            <li>
                If a single certificate is conveyed, it is placed in a CBOR bstr.
              </li>
            <li>
                If multiple certificates are conveyed, a CBOR array of bstrs is used.
		Each certificate being in its own bstr.
              </li>
          </ul>
        </dd>
        <dt>x5chain:</dt>
        <dd>
          <t>
	    This header attribute contains an ordered array of X.509 certificates.
	    The certificates are to be ordered starting with the certificate containing the end-entity key followed by the certificate which signed it and so on.
	    There is no requirement for the entire chain to be present in the element if there is reason to believe that the relying party will already have it.
            This means that the relying party is still required to do path building, but that a candidate path is proposed in this attribute.
          </t>
          <t>
	    As this header element does not provide any trust, the header attribute can be in either a protected or unprotected header attribute.
          </t>
          <t>
            This header attribute allows for a single or a chain of X.509 certificates to be carried in the message.
          </t>
          <ul spacing="normal">
            <li>
                If a single certificate is conveyed, it is placed in a CBOR bstr.
              </li>
            <li>
                If multiple certificates are conveyed, a CBOR array of bstrs is used.
		Each certificate being in it's own slot.
              </li>
          </ul>
        </dd>
        <dt>x5t:</dt>
        <dd>
          <t>
            This header attribute provides the ability to identify an X.509 certificate by a hash value.
            The attribute is an array of two elements.
            The first element is an algorithm identifier which is an integer or a string containing the hash algorithm identifier.
            The second element is a binary string containing the hash value.
          </t>
          <t>
	    As this header element does not provide any trust, the header attribute can be in either a protected or unprotected header attribute.
          </t>
          <t>
            For interoperability, applications which use this header attribute MUST support the hash algorithm 'sha256', but can use other hash algorithms.
          </t>
        </dd>
        <dt>x5u:</dt>
        <dd>
          <t>
            This header attribute provides the ability to identify an X.509 certificate by a URI.
            The referenced resource can be any of the following media types:
          </t>
          <ul spacing="normal">
            <li>application/pkix-cert <xref target="RFC2585"/></li>
            <li>application/pkcs7-mime; smime-type="certs-only" <xref target="I-D.ietf-lamps-rfc5751-bis"/></li>
            <!--              <t>application/pem-certificate-chain <xref target="I-D.ietf-acme-acme"/></t> -->
          </ul>
          <t>
	    As this header attribute implies a trust relationship, the attribute MUST be in the protected attributes.
          </t>
          <t>
            The URI provided MUST provide integrity protection and server authentication.
            For example, an HTTP or CoAP GET request to retrieve a certificate MUST use TLS <xref target="RFC8446"/> or DTLS <xref target="I-D.ietf-tls-dtls13"/>.
            If the certificate does not chain to an existing trust anchor, the certificate MUST NOT be trusted unless the server is configured as trusted to provide new trust anchors.
            This will normally be the situation when self-signed certificates are used.
          </t>
        </dd>
      </dl>
      <t>
	The header attributes are used in the following locations:
      </t>
      <ul spacing="normal">
        <li>
	    COSE_Signature and COSE_Sign0 objects, in these objects they identify the key that was used for generating signature.
	  </li>
        <li>
            COSE_recipient objects, in this location they may be used to identify the certificate for the recipient of the message.
          </li>
      </ul>
      <table anchor="Tags" align="center">
        <name>X.509 COSE Headers</name>
        <thead>
          <tr>
            <th align="left">Name</th>
            <th align="left">Value</th>
            <th align="left">value type</th>
            <th align="left">description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">x5bag</td>
            <td align="left">TBD4</td>
            <td align="left">COSE_X509</td>
            <td align="left">An unordered bag of X.509 certificates</td>
          </tr>
          <tr>
            <td align="left">x5chain</td>
            <td align="left">TBD3</td>
            <td align="left">COSE_X509</td>
            <td align="left">An ordered chain of X.509 certificates</td>
          </tr>
          <tr>
            <td align="left">x5t</td>
            <td align="left">TBD1</td>
            <td align="left">COSE_CertHash</td>
            <td align="left">Hash of an X.509 certificate</td>
          </tr>
          <tr>
            <td align="left">x5u</td>
            <td align="left">TBD2</td>
            <td align="left">uri</td>
            <td align="left">URI pointing to an X.509 certificate</td>
          </tr>
        </tbody>
      </table>
      <t>
        Below is an equivalent CDDL <xref target="I-D.ietf-cbor-cddl"/> description of the text above.
      </t>
      <artwork type="CDDL" name="" align="left" alt=""><![CDATA[
COSE_X509 = bstr / [ 2*certs: bstr ]
COSE_CertHash = [ hashAlg: (int / tstr), hashValue: bstr ]
]]></artwork>
    </section>
    <section>
      <name>X.509 certificates and static-static ECDH</name>
      <t>
        The header attributes defined in the previous section are used to identify the recipient certificates for the ECDH key agreement algorithms.
        In this section we define the algorithm specific parameters that are used for identifying or transporting the senders key for static-static key agreement algorithms.
      </t>
      <t>
        These attributes are defined analogously to those in the previous section.
        There is no definition for the certificate bag as the same attribute would be used for both the sender and recipient certificates.

      </t>
      <dl newline="false" spacing="normal">
        <dt>x5chain-sender:</dt>
        <dd>
            This header attribute contains the chain of certificates starting with the sender's key exchange certificate.
            The structure is the same as 'x5bag'.
          </dd>
        <dt>x5t-sender:</dt>
        <dd>
            This header attribute contains the hash value for the sender's key exchange certificate.
            The structure is the same as 'x5t'.
          </dd>
        <dt>x5u-sender:</dt>
        <dd>
            This header attribute contains a URI for the sender's key exchange certificate.
            The structure and processing are the same as 'x5u'.
          </dd>
      </dl>
      <table anchor="Tags2" align="center">
        <name>Static ECDH Algorithm Values</name>
        <thead>
          <tr>
            <th align="left">Name</th>
            <th align="left">Value</th>
            <th align="left">Type</th>
            <th align="left">Algorithm</th>
            <th align="left">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">x5t-sender</td>
            <td align="left">TBD</td>
            <td align="left">COSE_CertHash</td>
            <td align="left">ECDH-SS+HKDF-256, ECDH-SS+HKDF-512, ECDH-SS+A128KW, ECDH-SS+AES192KW, ECDH-SS+AES256KW</td>
            <td align="left">Thumbprint for the senders X.509 certificate</td>
          </tr>
          <tr>
            <td align="left">x5u-sender</td>
            <td align="left">TBD</td>
            <td align="left">uri</td>
            <td align="left">ECDH-SS+HKDF-256, ECDH-SS+HKDF-512, ECDH-SS+A128KW, ECDH-SS+AES192KW, ECDH-SS+AES256KW</td>
            <td align="left">URI for the senders X.509 certificate</td>
          </tr>
          <tr>
            <td align="left">x5chain-sender</td>
            <td align="left">TBD</td>
            <td align="left">COSE_X509</td>
            <td align="left">ECDH-SS+HKDF-256, ECDH-SS+HKDF-512, ECDH-SS+A128KW, ECDH-SS+AES192KW, ECDH-SS+AES256KW</td>
            <td align="left">static key X.509 certificate chain</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <section anchor="cose-header-key-table">
        <name>COSE Header Parameter Registry</name>
        <t>
          IANA is requested to register the new COSE Header items in <xref target="Tags"/> in the "COSE Header Parameters" registry.
        </t>
      </section>
      <section>
        <name>COSE Header Algorithm Parameter Registry</name>
        <t>
          IANA is requested to register the new COSE Header items in <xref target="Tags2"/> in the "COSE Header Algorithm Parameters" registry.
        </t>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>
        Establishing trust in a certificate is a vital part of processing.
        Trust cannot be assumed whenever a new self-signed certificate appears on the client, instead a well defined process is required.
        One common way for a new trust anchor to be added (or removed) from a device is by doing a new firmware upgrade.
      </t>
      <t>
        In constrained systems, there is a trade-off between the order of checking the signature and checking the certificate for validity.
        Validating certificates can require that network resources be accessed in order to get revocation information or retrieve certificates during path building.
        Doing the network access can consume resources dealing with power and network bandwidth.
        On the other hand, an oracle can potentially be built based on if the network resources are only accessed if the signature validation passes.
        In any event, both the signature and certificate validation MUST be checked before acting on any requests.
      </t>
      <t>
        As called out in the COSE algorithms document <xref target="I-D.ietf-cose-rfc8152bis-algs"/> basic checking on the keys in a certificate needs to be performed prior to using them.
        These can include validating that points are on curves for elliptical curve algorithms and that sizes of keys are acceptable for RSA.
        The use of unvalidated keys can lead either to loss of security or excessive consumption of resources.
      </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <seriesInfo name="DOI" value="10.17487/RFC2119"/>
            <seriesInfo name="RFC" value="2119"/>
            <seriesInfo name="BCP" value="14"/>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC5280" target="https://www.rfc-editor.org/info/rfc5280" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <seriesInfo name="DOI" value="10.17487/RFC5280"/>
            <seriesInfo name="RFC" value="5280"/>
            <author initials="D." surname="Cooper" fullname="D. Cooper">
              <organization/>
            </author>
            <author initials="S." surname="Santesson" fullname="S. Santesson">
              <organization/>
            </author>
            <author initials="S." surname="Farrell" fullname="S. Farrell">
              <organization/>
            </author>
            <author initials="S." surname="Boeyen" fullname="S. Boeyen">
              <organization/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization/>
            </author>
            <author initials="W." surname="Polk" fullname="W. Polk">
              <organization/>
            </author>
            <date year="2008" month="May"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <seriesInfo name="DOI" value="10.17487/RFC8174"/>
            <seriesInfo name="RFC" value="8174"/>
            <seriesInfo name="BCP" value="14"/>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-cose-rfc8152bis-struct" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-rfc8152bis-struct.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-cose-rfc8152bis-struct-03.txt">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-cose-rfc8152bis-struct-03"/>
            <author initials="J" surname="Schaad" fullname="Jim Schaad">
              <organization/>
            </author>
            <date month="June" day="10" year="2019"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.  This document along with [I-D.ietf-cose-rfc8152bis-algs] obsoletes RFC8152.</t>
            </abstract>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <seriesInfo name="DOI" value="10.17487/RFC8446"/>
            <seriesInfo name="RFC" value="8446"/>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-tls-dtls13" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tls-dtls13.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-tls-dtls13-32.txt">
          <front>
            <title>The Datagram Transport Layer Security (DTLS) Protocol Version 1.3</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-tls-dtls13-32"/>
            <author initials="E" surname="Rescorla" fullname="Eric Rescorla">
              <organization/>
            </author>
            <author initials="H" surname="Tschofenig" fullname="Hannes Tschofenig">
              <organization/>
            </author>
            <author initials="N" surname="Modadugu" fullname="Nagendra Modadugu">
              <organization/>
            </author>
            <date month="July" day="8" year="2019"/>
            <abstract>
              <t>This document specifies Version 1.3 of the Datagram Transport Layer Security (DTLS) protocol.  DTLS 1.3 allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.  The DTLS 1.3 protocol is intentionally based on the Transport Layer Security (TLS) 1.3 protocol and provides equivalent security guarantees with the exception of order protection/non-replayability. Datagram semantics of the underlying transport are preserved by the DTLS protocol.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-lamps-rfc5751-bis" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lamps-rfc5751-bis.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-lamps-rfc5751-bis-12.txt">
          <front>
            <title>Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 4.0 Message Specification</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-lamps-rfc5751-bis-12"/>
            <author initials="J" surname="Schaad" fullname="Jim Schaad">
              <organization/>
            </author>
            <author initials="B" surname="Ramsdell" fullname="Blake Ramsdell">
              <organization/>
            </author>
            <author initials="S" surname="Turner" fullname="Sean Turner">
              <organization/>
            </author>
            <date month="September" day="4" year="2018"/>
            <abstract>
              <t>This document defines Secure/Multipurpose Internet Mail Extensions (S/MIME) version 4.0.  S/MIME provides a consistent way to send and receive secure MIME data.  Digital signatures provide authentication, message integrity, and non-repudiation with proof of origin. Encryption provides data confidentiality.  Compression can be used to reduce data size.  This document obsoletes RFC 5751.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC2585" target="https://www.rfc-editor.org/info/rfc2585" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2585.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Operational Protocols: FTP and HTTP</title>
            <seriesInfo name="DOI" value="10.17487/RFC2585"/>
            <seriesInfo name="RFC" value="2585"/>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization/>
            </author>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization/>
            </author>
            <date year="1999" month="May"/>
            <abstract>
              <t>The protocol conventions described in this document satisfy some of the operational requirements of the Internet Public Key Infrastructure (PKI).  This document specifies the conventions for using the File Transfer Protocol (FTP) and the Hypertext Transfer Protocol (HTTP) to obtain certificates and certificate revocation lists (CRLs) from PKI repositories.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.selander-ace-cose-ecdhe" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml" target="http://www.ietf.org/internet-drafts/draft-selander-ace-cose-ecdhe-13.txt">
          <front>
            <title>Ephemeral Diffie-Hellman Over COSE (EDHOC)</title>
            <seriesInfo name="Internet-Draft" value="draft-selander-ace-cose-ecdhe-13"/>
            <author initials="G" surname="Selander" fullname="Goeran Selander">
              <organization/>
            </author>
            <author initials="J" surname="Mattsson" fullname="John Mattsson">
              <organization/>
            </author>
            <author initials="F" surname="Palombini" fullname="Francesca Palombini">
              <organization/>
            </author>
            <date month="March" day="11" year="2019"/>
            <abstract>
              <t>This document specifies Ephemeral Diffie-Hellman Over COSE (EDHOC), a very compact, and lightweight authenticated Diffie-Hellman key exchange with ephemeral keys.  EDHOC provides mutual authentication, perfect forward secrecy, and identity protection.  EDHOC is intended for usage in constrained scenarios and a main use case is to establish an OSCORE security context.  By reusing COSE for cryptography, CBOR for encoding, and CoAP for transport, the additional code footprint can be kept very low.</t>
            </abstract>
          </front>
        </reference>
        <!-- <?rfc include="reference.RFC.7468.xml" ?> PEM -->
        <reference anchor="RFC8392" target="https://www.rfc-editor.org/info/rfc8392" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8392.xml">
          <front>
            <title>CBOR Web Token (CWT)</title>
            <seriesInfo name="DOI" value="10.17487/RFC8392"/>
            <seriesInfo name="RFC" value="8392"/>
            <author initials="M." surname="Jones" fullname="M. Jones">
              <organization/>
            </author>
            <author initials="E." surname="Wahlstroem" fullname="E. Wahlstroem">
              <organization/>
            </author>
            <author initials="S." surname="Erdtman" fullname="S. Erdtman">
              <organization/>
            </author>
            <author initials="H." surname="Tschofenig" fullname="H. Tschofenig">
              <organization/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties.  The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection.  A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value.  CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC8152" target="https://www.rfc-editor.org/info/rfc8152" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8152.xml">
          <front>
            <title>CBOR Object Signing and Encryption (COSE)</title>
            <seriesInfo name="DOI" value="10.17487/RFC8152"/>
            <seriesInfo name="RFC" value="8152"/>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization/>
            </author>
            <date year="2017" month="July"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-cbor-cddl" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cbor-cddl.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-cbor-cddl-08.txt">
          <front>
            <title>Concise data definition language (CDDL): a notational convention to express CBOR and JSON data structures</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-cbor-cddl-08"/>
            <author initials="H" surname="Birkholz" fullname="Henk Birkholz">
              <organization/>
            </author>
            <author initials="C" surname="Vigano" fullname="Christoph Vigano">
              <organization/>
            </author>
            <author initials="C" surname="Bormann" fullname="Carsten Bormann">
              <organization/>
            </author>
            <date month="March" day="24" year="2019"/>
            <abstract>
              <t>This document proposes a notational convention to express CBOR data structures (RFC 7049, Concise Binary Object Representation).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-acme-acme" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-acme-acme.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-acme-acme-18.txt">
          <front>
            <title>Automatic Certificate Management Environment (ACME)</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-acme-acme-18"/>
            <author initials="R" surname="Barnes" fullname="Richard Barnes">
              <organization/>
            </author>
            <author initials="J" surname="Hoffman-Andrews" fullname="Jacob Hoffman-Andrews">
              <organization/>
            </author>
            <author initials="D" surname="McCarney" fullname="Daniel McCarney">
              <organization/>
            </author>
            <author initials="J" surname="Kasten" fullname="James Kasten">
              <organization/>
            </author>
            <date month="December" day="20" year="2018"/>
            <abstract>
              <t>Public Key Infrastructure X.509 (PKIX) certificates are used for a number of purposes, the most significant of which is the authentication of domain names.  Thus, certification authorities (CAs) in the Web PKI are trusted to verify that an applicant for a certificate legitimately represents the domain name(s) in the certificate.  Today, this verification is done through a collection of ad hoc mechanisms.  This document describes a protocol that a CA and an applicant can use to automate the process of verification and certificate issuance.  The protocol also provides facilities for other certificate management functions, such as certificate revocation.  RFC EDITOR: PLEASE REMOVE THE FOLLOWING PARAGRAPH: The source for this draft is maintained in GitHub.  Suggested changes should be submitted as pull requests at https://github.com/ietf-wg-acme/acme [1].  Instructions are on that page as well.  Editorial changes can be managed in GitHub, but any substantive change should be discussed on the ACME mailing list (acme@ietf.org).</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="I-D.ietf-cose-rfc8152bis-algs" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-rfc8152bis-algs.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-cose-rfc8152bis-algs-03.txt">
          <front>
            <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
            <seriesInfo name="Internet-Draft" value="draft-ietf-cose-rfc8152bis-algs-03"/>
            <author initials="J" surname="Schaad" fullname="Jim Schaad">
              <organization/>
            </author>
            <date month="June" day="10" year="2019"/>
            <abstract>
              <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  COSE additionally describes how to represent cryptographic keys using CBOR.  In this specification the conventions for the use of a number of cryptographic algorithms with COSE.  The details of the structure of COSE are defined in [I-D.ietf-cose-rfc8152bis-struct].  This document along with [I-D.ietf-cose-rfc8152bis-struct] obsoletes RFC8152.</t>
            </abstract>
          </front>
        </reference>
      </references>
    </references>
  </back>
</rfc>
